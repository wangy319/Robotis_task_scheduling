total_end = 632;
end = array1d(1..25, [608, 300, 177, 64, 220, 37, 151, 9, 169, 27, 603, 205, 57, 567, 567, 589, 215, 220, 240, 632, 71, 0, 0, 0, 0]);
handLoad = array2d(1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
handUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1]);
moveDuration = array1d(1..21, [0, 70, 3, 7, 0, 5, 75, 4, 8, 8, 9, 3, 5, 0, 7, 7, 0, 0, 0, 9, 2]);
moveStart = array1d(1..21, [603, 220, 169, 57, 215, 27, 71, 0, 151, 9, 589, 177, 37, 240, 300, 567, 205, 205, 220, 608, 64]);
preceededByToolChange = array1d(1..25, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
pred = array1d(1..25, [11, 18, 9, 22, 17, 10, 21, 23, 7, 8, 16, 3, 6, 19, 2, 14, 12, 13, 5, 1, 4, 25, 24, 20, 15]);
start = array1d(1..25, [603, 290, 172, 64, 215, 32, 146, 4, 159, 17, 598, 180, 42, 307, 307, 574, 205, 215, 220, 617, 66, 0, 0, 0, 0]);
toolLoad = array3d(1..2, 1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
toolUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]);
usingMachine = array1d(1..25, [1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2]);
----------
total_end = 585;
end = array1d(1..25, [499, 191, 34, 554, 77, 534, 8, 86, 26, 104, 494, 62, 554, 458, 458, 480, 72, 77, 97, 585, 561, 0, 0, 0, 0]);
handLoad = array2d(1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
handUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1]);
moveDuration = array1d(1..21, [0, 77, 3, 0, 0, 71, 3, 4, 8, 8, 9, 3, 5, 0, 7, 7, 0, 7, 0, 9, 2]);
moveStart = array1d(1..21, [494, 104, 26, 554, 72, 458, 0, 77, 8, 86, 480, 34, 534, 97, 191, 458, 62, 62, 77, 561, 554]);
preceededByToolChange = array1d(1..25, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
pred = array1d(1..25, [11, 10, 9, 13, 17, 15, 22, 18, 7, 8, 16, 3, 6, 19, 2, 14, 12, 23, 5, 1, 4, 25, 24, 20, 21]);
start = array1d(1..25, [494, 181, 29, 554, 72, 529, 3, 81, 16, 94, 489, 37, 539, 198, 198, 465, 62, 72, 77, 570, 556, 0, 0, 0, 0]);
toolLoad = array3d(1..2, 1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
toolUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]);
usingMachine = array1d(1..25, [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2]);
----------
total_end = 560;
end = array1d(1..25, [536, 228, 34, 134, 77, 114, 8, 86, 26, 104, 531, 62, 134, 495, 495, 517, 72, 77, 97, 560, 141, 0, 0, 0, 0]);
handLoad = array2d(1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
handUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1]);
moveDuration = array1d(1..21, [0, 77, 3, 0, 0, 5, 3, 4, 8, 8, 9, 3, 5, 0, 7, 7, 0, 7, 0, 9, 2]);
moveStart = array1d(1..21, [531, 141, 26, 134, 72, 104, 0, 77, 8, 86, 517, 34, 114, 97, 228, 495, 62, 62, 77, 536, 134]);
preceededByToolChange = array1d(1..25, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
pred = array1d(1..25, [11, 21, 9, 13, 17, 10, 22, 18, 7, 8, 16, 3, 6, 19, 2, 14, 12, 23, 5, 1, 4, 25, 24, 20, 15]);
start = array1d(1..25, [531, 218, 29, 134, 72, 109, 3, 81, 16, 94, 526, 37, 119, 235, 235, 502, 62, 72, 77, 545, 136, 0, 0, 0, 0]);
toolLoad = array3d(1..2, 1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
toolUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]);
usingMachine = array1d(1..25, [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2]);
----------
total_end = 512;
end = array1d(1..25, [402, 94, 34, 481, 77, 461, 8, 433, 26, 451, 397, 62, 481, 361, 361, 383, 72, 77, 97, 512, 488, 0, 0, 0, 0]);
handLoad = array2d(1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
handUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]);
moveDuration = array1d(1..21, [0, 7, 3, 0, 0, 5, 3, 67, 8, 8, 9, 3, 5, 0, 7, 7, 0, 7, 0, 9, 2]);
moveStart = array1d(1..21, [397, 77, 26, 481, 72, 451, 0, 361, 8, 433, 383, 34, 461, 97, 94, 361, 62, 62, 77, 488, 481]);
preceededByToolChange = array1d(1..25, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
pred = array1d(1..25, [11, 18, 9, 13, 17, 10, 22, 15, 7, 8, 16, 3, 6, 19, 2, 14, 12, 23, 5, 1, 4, 25, 24, 20, 21]);
start = array1d(1..25, [397, 84, 29, 481, 72, 456, 3, 428, 16, 441, 392, 37, 466, 101, 101, 368, 62, 72, 77, 497, 483, 0, 0, 0, 0]);
toolLoad = array3d(1..2, 1..2, 1..25, [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
toolUsed = array1d(1..25, [1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1]);
usingMachine = array1d(1..25, [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2]);
----------
==========

%% Model variables : 820
%% Model constraints : 752

%% Search CPU time : 313ms
%% Search nodes : 305
%% Search decisions : 290
%% Wrong search decisions : 15
%% Search backtracks : 290
%% Max search depth : 77
%% Number solutions : 4

%% Total CPU time : 868ms

Flat profile of 0,90 secs (86 total ticks): main

  Interpreted + native   Method                        
 10,5%     9  +     0    org.jacop.constraints.ElementVariable.consistency
  5,8%     5  +     0    java.util.Arrays.copyOfRange
  5,8%     5  +     0    org.jacop.fz.SimpleNode.jjtAddChild
  3,5%     3  +     0    java.lang.ClassLoader.defineClass1
  3,5%     3  +     0    org.jacop.core.IntervalDomain.<init>
  3,5%     3  +     0    org.jacop.core.IntervalDomain.addDom
  3,5%     3  +     0    org.jacop.core.IntervalDomain.unionAdapt
  2,3%     0  +     2    java.lang.Object.hashCode
  2,3%     0  +     2    java.lang.Object.getClass
  2,3%     0  +     2    java.util.zip.Inflater.inflateBytes
  2,3%     2  +     0    org.jacop.fz.Parser.jj_3_3
  2,3%     2  +     0    java.util.HashMap.clear
  2,3%     2  +     0    java.util.HashMap.inflateTable
  2,3%     2  +     0    java.util.ArrayList$Itr.next
  2,3%     2  +     0    org.jacop.core.IntervalBasedBacktrackableManager.checkRemoveInvariant
  2,3%     2  +     0    org.jacop.core.Store.removeLevel
  1,2%     0  +     1    java.io.UnixFileSystem.getBooleanAttributes0
  1,2%     1  +     0    java.security.AccessController.doPrivileged
  1,2%     0  +     1    java.lang.Thread.currentThread
  1,2%     0  +     1    java.lang.Object.clone
  1,2%     1  +     0    java.lang.String.length
  1,2%     0  +     1    sun.misc.Unsafe.getObject
  1,2%     1  +     0    java.util.ArrayList.access$100
  1,2%     1  +     0    org.jacop.constraints.Reified.removeLevelLate
  1,2%     1  +     0    org.jacop.core.SmallDenseDomain.singleton
 88,4%    66  +    10    Total interpreted (including elided)

     Compiled + native   Method                        
  2,3%     2  +     0    org.jacop.core.Store.removeLevel
  2,3%     2  +     0    Total compiled

         Stub + native   Method                        
  8,1%     0  +     7    java.lang.System.arraycopy
  8,1%     0  +     7    Total stub

  Thread-local ticks:
  1,2%     1             Class loader


Global summary of 0,90 seconds:
100,0%    87             Received ticks
  1,1%     1             Received GC ticks
165,5%   144             Compilation
  1,1%     1             Class loader
